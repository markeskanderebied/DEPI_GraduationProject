@* @{
    ViewData["Title"] = "Start Selling";
}

<h2>🛒 Sell Windshield</h2>
<form method="post" asp-controller="Sell" asp-action="ConfirmSale">
    <div class="mb-3">
        <label for="code" class="form-label">Windshield Code</label>
        <input type="text" class="form-control" id="code" name="WindshieldCode" required onblur="fetchProductName()">
    </div>

    <div class="mb-3">
        <label class="form-label">Product Name</label>
        <input type="text" class="form-control" id="productName" name="ProductName" readonly>
    </div>

    <div class="mb-3">
        <label class="form-label">Adhesive Amount (L)</label>
        <input type="number" class="form-control" step="0.01" min="0" name="AdhesiveAmount" value="0.75" required>
    </div>

    <hr />

    <h4>🔧 Customer Details</h4>
    <div class="mb-3">
        <label class="form-label">Customer Name</label>
        <input type="text" class="form-control" name="CustomerName" required>
    </div>

    <div class="mb-3">
        <label class="form-label">Customer Phone</label>
        <input type="tel" class="form-control" name="CustomerPhone" required>
    </div>

    <div class="mb-3">
        <label class="form-label">Car Number</label>
        <input type="text" class="form-control" name="CarNumber" required>
    </div>

    <button type="submit" class="btn btn-primary">✅ Confirm Sale</button>
</form>

@section Scripts {
    <script>
        function fetchProductName() {
            const code = document.getElementById("code").value;
            const nameField = document.getElementById("productName");

            // Simulated product name fetch
            if (code === "WIN123") {
                nameField.value = "Hyundai Tucson Front Windshield";
            } else if (code === "WIN456") {
                nameField.value = "Kia Sportage Rear Windshield";
            } else {
                nameField.value = "Unknown Product";
            }
        }
    </script>
}
 *@
 @*
            @model SellViewModel

@{
    ViewData["Title"] = "Sell to Customer";
}

<h2>Sell Windshield</h2>

<form asp-action="Index" method="post">
    <div class="form-group">
        <label>Windshield Code</label>
        <input asp-for="WindshieldCode" class="form-control" placeholder="Enter Code" />
    </div>

    <div class="form-group mt-2">
        <label>Product Name (Auto-filled)</label>
        <input asp-for="ProductName" class="form-control" readonly />
    </div>

    <div class="form-group mt-2">
        <label>Adhesive Amount (L)</label>
        <input asp-for="AdhesiveAmount" class="form-control" />
    </div>

    <hr />
    <h4>Customer Details</h4>

    <div class="form-group mt-2">
        <label>Customer Name</label>
        <input asp-for="CustomerName" class="form-control" />
    </div>

    <div class="form-group mt-2">
        <label>Phone Number</label>
        <input asp-for="CustomerPhone" class="form-control" />N
    </div>

    <div class="form-group mt-2">
        <label>Car Number</label>
        <input asp-for="CarNumber" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary mt-3">Submit Sale</button>
</form>
*@

@*

        @model DEPI_GraduationProject.ViewModels.PosSaleViewModel

@{
    ViewData["Title"] = "POS Sales";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            POS Sale Entry
        </div>
        <div class="card-body">
            <form asp-action="SubmitSale" method="post" id="posSaleForm">
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label asp-for="ProductCode" class="form-label">Product Code</label>
                        <input asp-for="ProductCode" class="form-control" id="ProductCode" autocomplete="off" />
                    </div>
                    <div class="col-md-6">
                        <label asp-for="ProductName" class="form-label">Product Name</label>
                        <input asp-for="ProductName" class="form-control" id="ProductName" readonly />
                    </div>
                </div>
                <div class="mb-3">
                    <label asp-for="ClientName" class="form-label">Client Name</label>
                    <input asp-for="ClientName" class="form-control" />
                </div>
                <div class="mb-3">
                    <label asp-for="ClientNumber" class="form-label">Client Number</label>
                    <input asp-for="ClientNumber" class="form-control" />
                </div>
                <div class="mb-3">
                    <label asp-for="CarNumber" class="form-label">Car Number</label>
                    <input asp-for="CarNumber" class="form-control" />
                </div>
                <div class="mb-3">
                    <label asp-for="AdhesiveAmount" class="form-label">Adhesive Amount (ml)</label>
                    <input asp-for="AdhesiveAmount" class="form-control" />
                </div>

                <button type="submit" class="btn btn-success">Submit Sale</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script>
        $('#ProductCode').on('change', function() {
            var code = $(this).val();
            // TODO: Make an AJAX call to get product info by code
            // Example (replace with your controller URL):
            $.get('/Products/GetProductNameByCode', { code: code }, function(data) {
                $('#ProductName').val(data.productName);
            });
        });
    </script>
}
@* *@

@*
@model DEPI_GraduationProject.ViewModels.PosSaleViewModel

@{
    ViewData["Title"] = "POS Sales";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            POS Sale Entry
        </div>
        <div class="card-body">
            <form asp-action="SubmitSale" method="post" id="posSaleForm">

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="ClientName" class="form-label">Client Name</label>
                        <input asp-for="ClientName" class="form-control" />
                    </div>
                    <div class="col-md-4">
                        <label asp-for="ClientNumber" class="form-label">Client Number</label>
                        <input asp-for="ClientNumber" class="form-control" />
                    </div>
                    <div class="col-md-4">
                        <label asp-for="CarNumber" class="form-label">Car Number</label>
                        <input asp-for="CarNumber" class="form-control" />
                    </div>
                </div>

                <table class="table table-bordered align-middle" id="productsTable">
                    <thead>
                        <tr>
                            <th>Product Code</th>
                            <th>Product Name</th>
                            <th>Adhesive Amount (ml)</th>
                            <th style="width:60px">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- JS will fill rows -->
                    </tbody>
                </table>
                <button type="button" class="btn btn-outline-primary mb-3" id="addProductRow">Add Product</button>
                <button type="submit" class="btn btn-success float-end">Submit Sale</button>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <script>
        let rowIdx = 0;
        function getProductRow(idx) {
            return `<tr>
                <td>
                    <input name="Products[${idx}].ProductCode" class="form-control product-code" autocomplete="off" />
                </td>
                <td>
                    <input name="Products[${idx}].ProductName" class="form-control" readonly />
                </td>
                <td>
                    <input name="Products[${idx}].AdhesiveAmount" class="form-control" type="number" step="0.01" min="0" />
                </td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm remove-row">X</button>
                </td>
            </tr>`;
        }

        // Helper function to attach autocomplete to new inputs
        function attachAutocomplete(input) {
            $(input).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Controllers/Products/SuggestProductCodes', // <-- You need to create this endpoint!
                        data: { term: request.term }, // jQuery UI uses 'term' for queries
                        success: function (data) {
                            response(data); // Assume data is an array: ["P1001", "P1002", ...]
                        }
                    });
                },
                minLength: 2,
                select: function (event, ui) {
                    // Auto trigger change, so name is populated
                    $(this).val(ui.item.value).trigger('change');
                    return false; // to prevent default action
                }
            });
        }

        // Add first row on load
        $(document).ready(function () {
            $("#addProductRow").trigger("click");
        });

        $("#addProductRow").click(function () {
            let newRow = $(getProductRow(rowIdx++));
            $("#productsTable tbody").append(newRow);
            attachAutocomplete(newRow.find('.product-code'));
        });

        // Remove row handler
        $("#productsTable").on('click', '.remove-row', function () {
            $(this).closest('tr').remove();
        });

        // Attach autocomplete for any dynamic row (needed if you have preloaded rows)
        $("#productsTable").on('focus', '.product-code', function () {
            if (!$(this).data('ui-autocomplete')) {
                attachAutocomplete(this);
            }
        });

        // AJAX for product name
        $("#productsTable").on('change', '.product-code', function () {
            var $row = $(this).closest('tr');
            var code = $(this).val();
            if (!code) {
                $row.find('input[name*="ProductName"]').val('');
                return;
            }
            $.get('/Products/GetProductNameByCode', { code: code }, function (data) {
                if (data && data.productName) {
                    $row.find('input[name*="ProductName"]').val(data.productName);
                } else {
                    $row.find('input[name*="ProductName"]').val('Product not found');
                }
            }).fail(function () {
                $row.find('input[name*="ProductName"]').val('Error loading product');
            });
        });
    </script>
}
 *@
@*
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script>
                // Allow multiple products/rows
                let rowIdx = 0;
                function getProductRow(idx) {
                    return `<tr>
        <td>
            <input name="Products[${idx}].ProductCode" class="form-control product-code" autocomplete="off" />
        </td>
        <td>
            <input name="Products[${idx}].ProductName" class="form-control" readonly />
        </td>
        <td>
            <input name="Products[${idx}].AdhesiveAmount" class="form-control" type="number" step="0.01" min="0" />
        </td>
        <td>
            <button type="button" class="btn btn-danger btn-sm remove-row">X</button>
        </td>
        </tr>`;
                }

                // Add first row on load
                $(document).ready(function () {
                    $("#addProductRow").trigger("click");
                });

                $("#addProductRow").click(function () {
                    $("#productsTable tbody").append(getProductRow(rowIdx++));
                });

                // Remove row handler
                $("#productsTable").on('click', '.remove-row', function () {
                    $(this).closest('tr').remove();
                });

                // AJAX for product name
                $("#productsTable").on('change', '.product-code', function () {
                    var $row = $(this).closest('tr');
                    var code = $(this).val();
                    if (!code) {
                        $row.find('input[name*="ProductName"]').val('');
                        return;
                    }
                    $.get('/Products/GetProductNameByCode', { code: code }, function (data) {
                        if (data && data.productName) {
                            $row.find('input[name*="ProductName"]').val(data.productName);
                        } else {
                            $row.find('input[name*="ProductName"]').val('Product not found');
                        }
                    }).fail(function () {
                        $row.find('input[name*="ProductName"]').val('Error loading product');
                    });
                });
    </script>
}*@



                        @model DEPI_GraduationProject.ViewModels.PosSaleViewModel

@{
    ViewData["Title"] = "POS Sales";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
<style>
    .ui-autocomplete {
        max-height: 200px;
        overflow-y: auto;
        overflow-x: hidden;
        z-index: 9999 !important;
    }

    .ui-menu-item {
        padding: 5px 10px;
        cursor: pointer;
    }

        .ui-menu-item:hover {
            background-color: #f0f0f0;
        }

    .ui-state-active, .ui-widget-content .ui-state-active {
        background-color: #0d6efd;
        border-color: #0d6efd;
        color: white;
    }
</style>

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            POS Sale Entry
        </div>
        <div class="card-body">
            <form asp-action="SubmitSale" method="post" id="posSaleForm">

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="ClientName" class="form-label">Client Name</label>
                        <input asp-for="ClientName" class="form-control" />
                    </div>
                    <div class="col-md-4">
                        <label asp-for="ClientNumber" class="form-label">Client Number</label>
                        <input asp-for="ClientNumber" class="form-control" />
                    </div>
                    <div class="col-md-4">
                        <label asp-for="CarNumber" class="form-label">Car Number</label>
                        <input asp-for="CarNumber" class="form-control" />
                    </div>
                </div>

                <table class="table table-bordered align-middle" id="productsTable">
                    <thead>
                        <tr>
                            <th>Product Code</th>
                            <th>Product Name</th>
                            <th>Adhesive Amount (ml)</th>
                            <th style="width:60px">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- JS will fill rows -->
                    </tbody>
                </table>
                <button type="button" class="btn btn-outline-primary mb-3" id="addProductRow">Add Product</button>
                <button type="submit" class="btn btn-success float-end">Submit Sale</button>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <script>
        let rowIdx = 0;
        function getProductRow(idx) {
            return `<tr>
                <td>
                    <div class="dropdown-search-container position-relative">
                        <input name="Products[${idx}].ProductCode" class="form-control product-code" autocomplete="off" placeholder="Start typing product code..." />
                    </div>
                </td>
                <td>
                    <input name="Products[${idx}].ProductName" class="form-control" readonly />
                </td>
                <td>
                    <input name="Products[${idx}].AdhesiveAmount" class="form-control" type="number" step="0.01" min="0" />
                </td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm remove-row">X</button>
                </td>
            </tr>`;
        }

        // Enhanced autocomplete setup
        function attachAutocomplete(input) {
            $(input).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Products/SuggestProductCodes',
                        data: { term: request.term },
                        dataType: 'json',
                        success: function (data) {
                            // Limit to 10 results for better UX
                            response(data.slice(0, 10));
                        }
                    });
                },
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.value);

                    // Fetch product name when code is selected
                    var $row = $(this).closest('tr');
                    fetchProductName(ui.item.value, $row);

                    return false;
                }
            }).data("ui-autocomplete")._renderItem = function(ul, item) {
                // Custom rendering for dropdown items
                return $("<li>")
                    .append("<div>" + item.value + "</div>")
                    .appendTo(ul);
            };
        }

        // Function to fetch product name
        function fetchProductName(code, $row) {
            if (!code) {
                $row.find('input[name*="ProductName"]').val('');
                return;
            }

            $.get('/Products/GetProductNameByCode', { code: code }, function (data) {
                if (data && data.productName) {
                    $row.find('input[name*="ProductName"]').val(data.productName);
                } else {
                    $row.find('input[name*="ProductName"]').val('Product not found');
                }
            }).fail(function () {
                $row.find('input[name*="ProductName"]').val('Error loading product');
            });
        }

        // Add first row on load
        $(document).ready(function () {
            $("#addProductRow").trigger("click");
        });

        $("#addProductRow").click(function () {
            let newRow = $(getProductRow(rowIdx++));
            $("#productsTable tbody").append(newRow);
            attachAutocomplete(newRow.find('.product-code'));
        });

        // Remove row handler
        $("#productsTable").on('click', '.remove-row', function () {
            $(this).closest('tr').remove();
        });

        // Ensure all product code inputs have autocomplete
        $("#productsTable").on('focus', '.product-code', function () {
            if (!$(this).data('ui-autocomplete')) {
                attachAutocomplete(this);
            }
        });

        // Handle manual input without selection
        $("#productsTable").on('change', '.product-code', function() {
            var $row = $(this).closest('tr');
            var code = $(this).val();
            fetchProductName(code, $row);
        });
    </script>
}